[{"C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\index.js":"1","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\reportWebVitals.js":"2","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\App.js":"3","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\Footer.jsx":"4","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\Navigation.jsx":"5","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\AddJobSite.jsx":"6","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\JobSiteTable.jsx":"7","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\AddCategory.jsx":"8","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\firebase.js":"9","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\CategoryTable.jsx":"10","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\CategoryDetails.jsx":"11"},{"size":659,"mtime":1609625840000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1609625840000,"results":"14","hashOfConfig":"13"},{"size":807,"mtime":1609629875110,"results":"15","hashOfConfig":"13"},{"size":256,"mtime":1609625840000,"results":"16","hashOfConfig":"13"},{"size":1211,"mtime":1609691237787,"results":"17","hashOfConfig":"13"},{"size":7605,"mtime":1609632682498,"results":"18","hashOfConfig":"13"},{"size":2333,"mtime":1609691978783,"results":"19","hashOfConfig":"13"},{"size":3809,"mtime":1609692350135,"results":"20","hashOfConfig":"13"},{"size":463,"mtime":1609625840000,"results":"21","hashOfConfig":"13"},{"size":1892,"mtime":1609691649254,"results":"22","hashOfConfig":"13"},{"size":2003,"mtime":1609692604105,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"138wfzg",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\index.js",[],["49","50"],"C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\reportWebVitals.js",[],"C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\App.js",["51","52"],"import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Navigation from './componenets/Navigation';\nimport AddCategory from './componenets/AddCategory';\nimport AddJobSite from './componenets/AddJobSite';\nimport JobSiteTable from './componenets/JobSiteTable';\nimport Footer from './componenets/Footer';\n\nfunction App() {\n  \n  return (\n    <Router>\n      <Navigation/>\n      <div>\n        \n       <Switch>\n        <Route  path=\"/add-category\" component={AddCategory}/>\n        <Route  path=\"/add-jobsite\" component={AddJobSite}/>\n        <Route  path=\"/\" component={JobSiteTable}/>\n       \n      \n       </Switch>\n      \n       \n      </div>\n      <Footer />\n   </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\Footer.jsx",[],"C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\Navigation.jsx",[],"C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\AddJobSite.jsx",["53"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Form, Container, Row, Col, Button, Card, Spinner, Alert } from 'react-bootstrap';\nimport Autosuggest from 'react-autosuggest';\nimport { db } from '../firebase';\nimport './Autosuggest.css';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst AddJobSite = props => {\n    const [categories, setCategories] = useState([]);\n    const [suggestions, setSuggestions] = useState([]);\n    const [value, setValue] = useState(\"\");\n    const [values, setValues] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [submited, setSubmited] = useState(false);\n    const nameRef = useRef(null);\n    const pmRef = useRef(null);\n\n    useEffect(() => {\n        db.collection('categories').get().then(resp => {\n            resp.docs.forEach(doc => setCategories(prevCat => {\n                return [\n                    ...prevCat,\n                    doc.data().name\n                ];\n            }));\n            setCategories(prevCat => [...new Set(prevCat)]);\n        }).catch(err => console.log(err));\n    }, [])\n\n\n    const getSuggestions = value => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0 ? [] : categories.filter(cat =>\n            cat.toLowerCase().includes(value)\n        );\n    };\n\n    const getSuggestionValue = suggestion => suggestion;\n\n    const renderSuggestion = suggestion => (\n        <div>\n            {suggestion}\n        </div>\n    );\n\n    const onSuggestionsFetchRequested = ({ value }) => {\n        setSuggestions(getSuggestions(value))\n    };\n\n    const handleChange = (e, { newValue }) => {\n        setValue(newValue);\n    }\n    const onSuggestionsClearRequested = () => {\n        setSuggestions([]);\n    };\n\n    const inputProps = {\n        placeholder: 'Type a category name',\n        value,\n        onChange: handleChange\n    };\n\n    function onSuggestionSelected(event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, enter }) {\n        if (values.indexOf(suggestion) === -1)\n            setValues(prevVal => {\n                return [\n                    ...prevVal,\n                    suggestion\n                ]\n            })\n\n    }\n\n\n    useEffect(() => {\n        if (loading) {\n            const id = uuidv4();\n            db.collection('job_sites').doc(id).set({\n                name: nameRef.current.value,\n                pm: pmRef.current.value,\n                categories: [...values]\n            }).then(resp => {\n                setLoading(false);\n                setSubmited(true);\n                setTimeout(() => {\n                    setSubmited(false);\n                }, 2000);\n            })\n                .catch(err => alert(err));\n\n        }\n\n    }, [loading])\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!nameRef.current.value || !pmRef.current.value || values.length===0) {\n          \n            setError(true);\n            setTimeout(() => {\n                setError(false);\n            }, 2000)\n        } else {\n            setLoading(true);\n        }\n\n\n\n    }\n\n    return (\n        <Container className=\"my-4 margin-leo\">\n            <Row>\n                <Col lg={12}>\n                    <Card>\n                        <Card.Header>Add a new job site</Card.Header>\n                        <Card.Body>\n                            <Form onSubmit={handleSubmit}>\n                                <Form.Row>\n                                    <Col>\n                                        <Form.Label className=\"pl-3\">Job site name</Form.Label>\n                                        <Form.Control placeholder=\"Name\" type=\"text\" ref={nameRef} />\n                                    </Col>\n                                </Form.Row>\n                                <Form.Row className=\"my-4\">\n                                    <Col sm={12} md={6}>\n                                        <Form.Label className=\"pl-3\">Category</Form.Label>\n\n                                        <Autosuggest\n                                            suggestions={suggestions}\n                                            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                                            onSuggestionsClearRequested={onSuggestionsClearRequested}\n                                            getSuggestionValue={getSuggestionValue}\n                                            renderSuggestion={renderSuggestion}\n                                            inputProps={inputProps}\n                                            onSuggestionSelected={onSuggestionSelected}\n                                        />\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <Form.Group controlId=\"exampleForm.SelectCustom\">\n                                            <Form.Label className=\"pl-2\">PM</Form.Label>\n                                            <Form.Control as=\"select\" custom ref={pmRef}>\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Col>\n                                </Form.Row>\n                                <Form.Row>\n                                    <Col>\n                                        {\n                                            values.map((value, _id) => <Button key={_id} className=\"m-2\" variant=\"primary\">{value}</Button>)\n                                        }\n                                    </Col>\n                                    <Col>\n                                    <Form.Row className=\"my-2 test\">\n                                    <Col className=\"d-flex justify-content-end\">\n                                        {\n                                            loading ? <Spinner variant=\"primary\" animation=\"border\" /> : <Button variant=\"outline-primary\" type=\"submit\">\n                                                Submit\n                                 </Button>\n                                        }\n                                    </Col>\n                                </Form.Row>\n                                    </Col>\n                                </Form.Row>\n                                \n                                <Form.Row>\n                                    <Col>\n\n                                        {\n                                            error ? <Alert variant=\"danger\" className=\"my-4\">One or more fields are empty!</Alert> : null\n                                        }\n                                        {\n                                            submited ? <Alert variant=\"primary\" className=\"my-4\">Category added successfully</Alert> : null\n                                        }\n                                    </Col>\n                                </Form.Row>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default AddJobSite;","C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\JobSiteTable.jsx",[],"C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\AddCategory.jsx",[],"C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\firebase.js",[],"C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\CategoryTable.jsx",["54","55","56","57"],"C:\\Users\\Leo\\Desktop\\flex-jobsites-main\\src\\componenets\\CategoryDetails.jsx",["58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":7,"column":3,"nodeType":"66","messageId":"67","endLine":7,"endColumn":7},{"ruleId":"69","severity":1,"message":"70","line":97,"column":8,"nodeType":"71","endLine":97,"endColumn":17,"suggestions":"72"},{"ruleId":"64","severity":1,"message":"73","line":10,"column":12,"nodeType":"66","messageId":"67","endLine":10,"endColumn":16},{"ruleId":"64","severity":1,"message":"74","line":10,"column":18,"nodeType":"66","messageId":"67","endLine":10,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":15,"column":95,"nodeType":"77","messageId":"78","endLine":15,"endColumn":96,"fix":"79"},{"ruleId":"80","severity":1,"message":"81","line":16,"column":38,"nodeType":"82","messageId":"83","endLine":16,"endColumn":40},{"ruleId":"64","severity":1,"message":"84","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":37},{"ruleId":"64","severity":1,"message":"85","line":17,"column":15,"nodeType":"66","messageId":"67","endLine":17,"endColumn":25},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'Data' is assigned a value but never used.","'setData' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"89","text":"90"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEeffect' is defined but never used.","'categories' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},[633,644],"\r\n        .","Update the dependencies array to be: [loading, values]",{"range":"93","text":"94"},[2832,2841],"[loading, values]"]